CREATE TABLE BID(
    BID_ID NUMBER PRIMARY KEY ,
    ITEM_ID NUMBER ,
    BIDDER_ID VARCHAR2(50)  NOT NULL ,
    BID_PRICE NUMBER NOT NULL , 
    BID_TIME DATE NOT NULL , 
    IS_SUCCESSFUL NUMBER DEFAULT 0 NOT NULL
);

CREATE TABLE AUCTION_ITEM(
    ITEM_ID NUMBER PRIMARY KEY ,
    SELLER_ID VARCHAR2(50) NOT NULL ,
    ITEM_NAME VARCHAR2(100) NOT NULL ,
    DESCRIPTION CLOB NOT NULL ,
    START_PRICE NUMBER NOT NULL ,
    CURRENT_PRICE NUMBER NOT NULL ,
    HIGHEST_BIDDER_ID VARCHAR2(50) ,
    START_TIME DATE NOT NULL , 
    END_TIME DATE NOT NULL ,
    STATUS VARCHAR2(50) DEFAULT '진행중' NOT NULL ,
    REG_DATE DATE NOT NULL 
);


CREATE TABLE USERS(
    MEMBER_ID VARCHAR2(50) PRIMARY KEY ,
    PASSWD VARCHAR2(50) NOT NULL , 
    NICKNAME VARCHAR2(50) NOT NULL ,
    VIRTUAL_MONEY NUMBER DEFAULT 0 NOT NULL ,
    REG_DATE DATE NOT NULL 
);

CREATE TABLE TRANSACTION_LOG(
    LOG_ID NUMBER PRIMARY KEY ,
    MEMBER_ID VARCHAR2(50) NOT NULL , 
    TRANSACTION_TYPE VARCHAR2(50) NOT NULL ,
    AMOUNT NUMBER NOT NULL ,
    TRANSACTION_TIME DATE NOT NULL ,
    RELATED_ITEM_ID NUMBER NULL
);

-- 시퀀스 생성 BID 용
CREATE SEQUENCE bid_seq 
START WITH 1 
INCREMENT BY 1;

-- 트리거 생성
CREATE OR REPLACE TRIGGER bid_trigger
BEFORE INSERT ON bid
FOR EACH ROW
BEGIN
  SELECT bid_seq.NEXTVAL INTO :new.bid_id FROM dual;
END;
/

-- 시퀀스 생성 AUCTION_ITEM 용
CREATE SEQUENCE auction_item_seq 
START WITH 1 
INCREMENT BY 1;

-- 트리거 생성
CREATE OR REPLACE TRIGGER auction_item_trigger
BEFORE INSERT ON auction_item
FOR EACH ROW
BEGIN
  SELECT auction_item_seq.NEXTVAL INTO :new.item_id FROM dual;
END;
/

-- BID 테이블 외래키 추가
ALTER TABLE BID
ADD CONSTRAINT FK_BID_USER FOREIGN KEY (BIDDER_ID)
REFERENCES USERS(MEMBER_ID);

ALTER TABLE BID 
ADD CONSTRAINT FK_BID_ITEM FOREIGN KEY (ITEM_ID)
REFERENCES AUCTION_ITEM(ITEM_ID);

--  AUCTION_ITEM 테이블 외래키 추가

ALTER TABLE AUCTION_ITEM 
ADD CONSTRAINT FK_AUCTION_SELLER FOREIGN KEY (SELLER_ID) 
REFERENCES USERS(MEMBER_ID);

ALTER TABLE AUCTION_ITEM 
ADD CONSTRAINT FK_HIGHEST_BIDDER FOREIGN KEY (HIGHEST_BIDDER_ID) 
REFERENCES USERS(MEMBER_ID);

--TRANSACTION_LOG 테이블 외래키 추가

ALTER TABLE TRANSACTION_LOG 
ADD CONSTRAINT FK_LOG_USER FOREIGN KEY (MEMBER_ID) 
REFERENCES USERS(MEMBER_ID);

ALTER TABLE TRANSACTION_LOG 
ADD CONSTRAINT FK_LOG_ITEM FOREIGN KEY (RELATED_ITEM_ID) 
REFERENCES AUCTION_ITEM(ITEM_ID);

-- 경매 상태 체크 제약조건 추가

ALTER TABLE AUCTION_ITEM 
ADD CONSTRAINT CHK_ITEM_STATUS 
CHECK (STATUS IN ('진행중', '종료', '취소'));

commit;






